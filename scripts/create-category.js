#!/usr/bin/env node

/**
 * Script ƒë·ªÉ t·∫°o m·ªôt category m·ªõi v√† c√°c b√†i vi·∫øt m·∫´u
 * S·ª≠ d·ª•ng: node scripts/create-category.js --name "T√™n Category" --locale vi --posts 3
 */

const fs = require('fs');
const path = require('path');
const { program } = require('commander');
const slugify = require('slugify');
const { execSync } = require('child_process');

// C·∫•u h√¨nh command line options
program
  .option('-n, --name <name>', 'T√™n category')
  .option('-l, --locale <locale>', 'Ng√¥n ng·ªØ (vi ho·∫∑c en)', 'vi')
  .option('-p, --posts <posts>', 'S·ªë l∆∞·ª£ng b√†i vi·∫øt m·∫´u', parseInt, 3)
  .option('-a, --author <author>', 'T√°c gi·∫£', 'Ruthless')
  .option('-d, --draft', 'T·∫°o b√†i vi·∫øt ·ªü ch·∫ø ƒë·ªô nh√°p', false);

program.parse(process.argv);

const options = program.opts();

// Ki·ªÉm tra t√™n category
if (!options.name) {
  console.error('L·ªói: T√™n category l√† b·∫Øt bu·ªôc');
  program.help();
  process.exit(1);
}

// T·∫°o ng√†y hi·ªán t·∫°i theo ƒë·ªãnh d·∫°ng YYYY-MM-DD
const today = new Date();

// Danh s√°ch c√°c ti√™u ƒë·ªÅ m·∫´u cho t·ª´ng category
const sampleTitles = {
  'Technology': [
    'Gi·ªõi thi·ªáu v·ªÅ c√¥ng ngh·ªá m·ªõi nh·∫•t',
    'C√°ch √°p d·ª•ng c√¥ng ngh·ªá v√†o cu·ªôc s·ªëng',
    'T∆∞∆°ng lai c·ªßa c√¥ng ngh·ªá',
    'Nh·ªØng xu h∆∞·ªõng c√¥ng ngh·ªá ƒë√°ng ch√∫ √Ω',
    'C√¥ng ngh·ªá v√† t√°c ƒë·ªông ƒë·∫øn x√£ h·ªôi'
  ],
  'Design': [
    'Nguy√™n t·∫Øc thi·∫øt k·∫ø hi·ªáu qu·∫£',
    'Xu h∆∞·ªõng thi·∫øt k·∫ø m·ªõi nh·∫•t',
    'C√°ch t·∫°o thi·∫øt k·∫ø thu h√∫t ng∆∞·ªùi d√πng',
    'M√†u s·∫Øc v√† t√¢m l√Ω trong thi·∫øt k·∫ø',
    'Thi·∫øt k·∫ø UX/UI hi·ªán ƒë·∫°i'
  ],
  'Development': [
    'H∆∞·ªõng d·∫´n l·∫≠p tr√¨nh cho ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu',
    'C√°c k·ªπ thu·∫≠t t·ªëi ∆∞u h√≥a code',
    'Ki·∫øn tr√∫c ph·∫ßn m·ªÅm hi·ªán ƒë·∫°i',
    'DevOps v√† CI/CD pipeline',
    'Ph√°t tri·ªÉn ·ª©ng d·ª•ng di ƒë·ªông'
  ],
  'Business': [
    'Chi·∫øn l∆∞·ª£c kinh doanh hi·ªáu qu·∫£',
    'X√¢y d·ª±ng th∆∞∆°ng hi·ªáu c√° nh√¢n',
    'Marketing trong k·ª∑ nguy√™n s·ªë',
    'Qu·∫£n l√Ω d·ª± √°n v√† t·ªï ch·ª©c',
    'Kh·ªüi nghi·ªáp v√† ƒë·ªïi m·ªõi'
  ]
};

// S·ª≠ d·ª•ng ti√™u ƒë·ªÅ m·∫´u cho category ho·∫∑c t·∫°o ti√™u ƒë·ªÅ m·∫∑c ƒë·ªãnh
const titles = sampleTitles[options.name] || [
  `Gi·ªõi thi·ªáu v·ªÅ ${options.name}`,
  `C√°c xu h∆∞·ªõng m·ªõi trong ${options.name}`,
  `C√°ch √°p d·ª•ng ${options.name} v√†o th·ª±c t·∫ø`,
  `T∆∞∆°ng lai c·ªßa ${options.name}`,
  `${options.name} v√† t√°c ƒë·ªông ƒë·∫øn cu·ªôc s·ªëng`
];

// T·∫°o c√°c b√†i vi·∫øt trong category
for (let i = 1; i <= options.posts; i++) {
  // T·∫°o ng√†y cho b√†i vi·∫øt (m·ªói b√†i c√°ch nhau 1 ng√†y)
  const postDate = new Date(today);
  postDate.setDate(today.getDate() + i - 1);
  const dateString = postDate.toISOString().split('T')[0];
  
  // Ch·ªçn ti√™u ƒë·ªÅ cho b√†i vi·∫øt
  const titleIndex = (i - 1) % titles.length;
  const postTitle = titles[titleIndex];
  
  // T·∫°o m√¥ t·∫£ cho b√†i vi·∫øt
  const excerpt = `B√†i vi·∫øt v·ªÅ ${postTitle.toLowerCase()} trong lƒ©nh v·ª±c ${options.name}.`;
  
  // T·∫°o l·ªánh ƒë·ªÉ t·∫°o b√†i vi·∫øt
  let command = `node scripts/create-post.js --title "${postTitle}" --locale ${options.locale} --category "${options.name}" --excerpt "${excerpt}" --author "${options.author}"`;
  
  if (options.draft) {
    command += ' --draft';
  }
  
  // Th·ª±c thi l·ªánh t·∫°o b√†i vi·∫øt
  try {
    execSync(command, { stdio: 'inherit' });
  } catch (error) {
    console.error(`L·ªói khi t·∫°o b√†i vi·∫øt ${i}:`, error.message);
  }
}

console.log(`\n‚úÖ ƒê√£ t·∫°o category "${options.name}" v·ªõi ${options.posts} b√†i vi·∫øt m·∫´u`);
console.log('üîó B·∫°n c√≥ th·ªÉ xem category n√†y t·∫°i:');
console.log(`   /categories/${encodeURIComponent(options.name)}`);

// Hi·ªÉn th·ªã g·ª£i √Ω c√°c l·ªánh h·ªØu √≠ch
console.log('\nüìù C√°c l·ªánh h·ªØu √≠ch:');
console.log(`- Li·ªát k√™ t·∫•t c·∫£ b√†i vi·∫øt trong category: node scripts/list-posts.js --category "${options.name}"`);
console.log(`- Li·ªát k√™ t·∫•t c·∫£ categories: node scripts/list-posts.js --sort category`);